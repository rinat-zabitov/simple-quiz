const questions = [
  {
    question: '–ö–∞–∫–æ–π —è–∑—ã–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ?',
    answers: ['Java', 'C', 'Python', 'JavaScript'],
    correct: 4,
  },
  {
    question: '–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç CSS?',
    answers: [
      'Central Style Sheets',
      'Cascading Style Sheets',
      'Cascading Simple Sheets',
      'Cars SUVs Sailboats',
    ],
    correct: 2,
  },
  {
    question: '–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç HTML?',
    answers: [
      'Hypertext Markup Language',
      'Hypertext Markdown Language',
      'Hyperloop Machine Language',
      'Helicopters Terminals Motorboats Lamborginis',
    ],
    correct: 1,
  },
  {
    question: '–í –∫–∞–∫–æ–º –≥–æ–¥—É –±—ã–ª —Å–æ–∑–¥–∞–Ω JavaScript?',
    answers: ['1996', '1995', '1994', '–≤—Å–µ –æ—Ç–≤–µ—Ç—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ'],
    correct: 2,
  },
];

const headerContainer = document.querySelector('#header');
const listContainer = document.querySelector('#list');
const btnSubmit = document.querySelector('#submit');

let questionsIndex = 0;
let score = 0;

clearPage();
showQuestion();
btnSubmit.onclick = checkAnswers;

function clearPage() {
  headerContainer.innerHTML = '';
  listContainer.innerHTML = '';
}

function showQuestion() {
  const headerTemplate = `<h2 class="title">%title%</h2>`;
  const title = headerTemplate.replace(
    '%title%',
    questions[questionsIndex]['question']
  );
  headerContainer.innerHTML = title;

  let answerNumber = 1;
  for (let answerText of questions[questionsIndex]['answers']) {
    const answerTempalate = `<li>
          <label>
            <input value="%number%" type="radio" class="answer" name="answer" />
            <span>%answers%</span>
          </label>
        </li>`;
    const answersHtml = answerTempalate
      .replace('%answers%', answerText)
      .replace('%number%', answerNumber);

    listContainer.innerHTML += answersHtml;
    answerNumber++;
  }
}

function checkAnswers() {
  const checkRadio = listContainer.querySelector('input[type="radio"]:checked');
  if (!checkRadio) {
    btnSubmit.blur();
    return;
  }

  const userAnswer = +checkRadio.value;
  if (userAnswer === questions[questionsIndex]['correct']) {
    score++;
  }

  if (questionsIndex !== questions.length - 1) {
    questionsIndex++;
    clearPage();
    showQuestion();
    return;
  } else {
    clearPage();
    showResults();
  }
}

function showResults() {
  const resultTemplate = ` <h2 class="title">%title%</h2>
          <h3 class="summary">%message%</h3>
          <p class="result">%result%</p>`;

  let title, message;

  if (score === questions.length) {
    title = '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!üëè';
    message = '–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –≤–µ—Ä–Ω–æ! üòéüëç';
  } else if ((score * 100) / questions.length >= 50) {
    title = '–ù–µ–ø–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! üòâ';
    message = '–í—ã –¥–∞–ª–∏ –±–æ–ª–µ–µ –ø–æ–ª–æ–≤–∏–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ üëç';
  } else {
    title = '–°—Ç–æ–∏—Ç –ø–æ—Å—Ç–∞—Ä–∞—Ç—å—Å—è üòï';
    message = '–ü–æ–∫–∞ —É –≤–∞—Å –º–µ–Ω—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã –ø—Ä–∞–≤–µ–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤';
  }

  let result = `${score} –∏–∑ ${questions.length}`;

  const finalMessage = resultTemplate
    .replace('%title%', title)
    .replace('%message%', message)
    .replace('%result%', result);

  headerContainer.innerHTML = finalMessage;

  btnSubmit.blur();
  btnSubmit.innerHTML = '–ù–∞—á–∞—Ç—å —Å–Ω–æ–≤–∞';
  btnSubmit.onclick = () => history.go();
}
